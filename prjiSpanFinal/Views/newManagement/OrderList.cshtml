@model IEnumerable<COrderListViewModel>
@{
    ViewData["Title"] = "OrderList";
    var pagedList = (IPagedList)ViewBag.Prods;
    if(ViewBag.pageSize==null){ViewBag.pageSize = 5;}
}
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Fluent;
@using X.PagedList.Web.Common;
@using prjiSpanFinal.ViewModels.newManagement
@section Styles{
    <style>
        td input {
            width: 160px;
        }
    </style>
}  
    
    <h1>訂單</h1>
    <form>
        依訂單狀態篩選
       <select id="filter" name="filter">
             <option value="">選擇訂單狀態</option>
           @foreach(var i in ViewBag.OrderStatus){
                <option value="@i.OrderStatusName">@i.OrderStatusName</option>
           }
       </select> 
        <input id="filtersubmit" type="submit" value="全部訂單" class="btn btn-outline-secondary" />
    </form>
    <form>
        <input type="search" name="keyword" placeholder="輸入訂單日期(日期格式為yyyy-mm-dd)或ID進行搜尋,或不輸入回到列表" class="form-control" />
        <input type="submit" value="搜尋" class="btn btn-outline-secondary mt-1" />
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    訂單ID
                </th>
                <th>
                    買家
                </th>
                <th>
                    下訂日期
                </th>
                <th>
                    收貨地址
                </th>
                <th>
                    訂單完成日期
                </th>
                <th>
                    使用優惠券
                </th>
                <th>
                    訂單狀態
                </th>
                <th>
                    物流
                </th>
                <th>
                    付款日期
                </th>
                <th>
                    出貨日期
                </th>
                <th>
                    領收日期
                </th>
                <th>
                    付款方式
                </th>
                <th>
                    給賣家的話
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td >
                    @Html.DisplayFor(modelItem => item.Order.OrderId)
                </td>
                <td >
                    @Html.DisplayFor(modelItem => item.MemberAcc)
                </td>
                <td >
                    <input value="@item.Order.OrderDatetime.ToString(" yyyy /MM/dd")" class="form-control-plaintext">
                </td>
                <td >
                    @Html.DisplayFor(modelItem => item.Order.RecieveAdr)
                </td>
                <td >
                    <input value="@item.Order.FinishDate.ToString(" yyyy /MM/dd")" class="form-control-plaintext">
                </td>
                <td >
                    @Html.DisplayFor(modelItem => item.CouponName)
                </td>
                <td>
                    <input class="form-control-plaintext statusname" value="@item.OrderStatusName" readonly>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShipperName)
                </td>
                <td>
                    <input value="@item.Order.PaymentDate.ToString(" yyyy /MM/dd")" class="form-control-plaintext">
                </td>
                <td>
                    <input value="@item.Order.ShippingDate.ToString(" yyyy /MM/dd")" class="form-control-plaintext">
                </td>
                <td>
                    <input value="@item.Order.ReceiveDate.ToString(" yyyy /MM/dd")" class="form-control-plaintext">
                </td>
                <td >
                    @Html.DisplayFor(modelItem => item.PaymentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.OrderMessage)
                </td>
                <td>
                    @{ 
                        if (item.Order.StatusId != 7)
                        {
                        <a name="@item.Order.OrderId" class="Out btn btn-outline-secondary mt-1">出貨</a>
                        <a name="@item.Order.OrderId" class="Delivered btn btn-outline-primary mt-1">到貨</a>
                        <a name="@item.Order.OrderId" class="Fin btn btn-outline-danger mt-1">完成</a>
                        <a name="@item.Order.OrderId" class="Stop btn btn-outline-danger mt-1">爭議處理中</a>
                        <a class="Dele btn btn-outline-danger" name="@item.Order.OrderId mt-1">取消並作廢訂單</a>}
                        }
                    @*@Html.ActionLink("查看更多", "MemberList2", new { id=item.MemberAccount.MemberId },new{@class="btn btn-primary"})*@
                    @Html.ActionLink("檢視細節", "OrderDetailList", new { id=item.Order.OrderId },new{@class= "btn btn-primary mt-1 Detail" })
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td class="text-muted" colspan="5">
                第 @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) 頁，共 @pagedList.PageCount 頁。
                每頁 @pagedList.PageSize 筆資料，全部共有 @pagedList.TotalItemCount 筆資料。
            </td>
        </tr>
    </tfoot>
</table>
@*分頁導覽*@
<div style="align-content:center" class="paginations">
    @{int ps = 3;if (ViewBag.pageSize != null) { ps = ViewBag.pageSize;}}
      @Html.Pager(pagedList).Url(page => Url.Action("OrderList", new {pageSize=ps, page })).DisplayEllipsesWhenNotShowingAllPageNumbers().MaximumPageNumbersToDisplay(ps).Build()
        
    每頁
    <select id="pagesize" class="mt-1">
        <option value=@ViewBag.pageSize>@ViewBag.pageSize</option>
        @{
            if (ViewBag.pageSize != 3) {
                        <option value=3>3</option>
            }}
            @{
            if (ViewBag.pageSize != 5) {
                      <option value=5>5</option>
            }}
            @{
            if (ViewBag.pageSize != 10) {
                   <option value=10>10</option>
            }}
            @{
            if (ViewBag.pageSize != 20) {
                      <option value=20>20</option>
            }}
            @{
            if (ViewBag.pageSize != 100) {
                        <option value=100>100</option>
            }}
     </select>
     筆
</div>
@*分頁導覽*@

@section Scripts{
    <script>
        let Out = document.querySelectorAll(".Out");
        let Delivered = document.querySelectorAll(".Delivered");
        let Fin = document.querySelectorAll(".Fin");
        let Stop = document.querySelectorAll(".Stop");
        let Dele = document.querySelectorAll(".Dele");
        let PSName = document.querySelectorAll(".statusname");
        for (var BTNdele of Out) {
            BTNdele.addEventListener("click", async function (event) {
                event.preventDefault();
                console.log(event.currentTarget.name);
                let response = await fetch("@Url.Content("~/newManagement/OrderOut")" + `?id=${event.currentTarget.name}`)
                let data = await response.text();
                if (data == 1) {
                    $(this).closest("td").siblings().find(".statusname").val("已出貨");
                }
            })
        }
        for (var BTNdele of Dele) {
            BTNdele.addEventListener("click", async function (event) {
                let c = confirm("確定要刪除嗎?");
                c;
                if (c) {
                    let response = await fetch("@Url.Content("~/newManagement/OrderDelete")" + `?id=${event.currentTarget.name}`);
                    let data = await response.text();
                    if (data == 1) {
                        $(this).closest("td").siblings().find(".statusname").val("已取消");
                    }
                    else {
                        alert("操作失敗，請聯繫蝦到爆客服人員");
                    }
                }
            })
        }
        for (var BTNUnd of Delivered) {
            BTNUnd.addEventListener("click", async function (event) {
                event.preventDefault();
                console.log(event.currentTarget.name);
                let response = await fetch("@Url.Content("~/newManagement/OrderDeliver")" + `?id=${event.currentTarget.name}`)
                let data = await response.text();
                if (data == 1) {
                    $(this).closest("td").siblings().find(".statusname").val("已到貨");

                }
            })
        }
        for (var BTNdow of Fin) {
            BTNdow.addEventListener("click", async function (event) {
                event.preventDefault();
                console.log(event.currentTarget.name);
                let c = confirm("完成訂單後將不可修改，確定要完成訂單嗎?");
                c;
                if (c) {
                    let response = await fetch("@Url.Content("~/newManagement/OrderFin")" + `?id=${event.currentTarget.name}`);
                    let data = await response.text();
                    if (data == 1) {
                        $(this).closest("td").siblings().find(".statusname").val("已完成");
                        $(this).siblings().not(".Detail").remove();
                        $(this).remove();
                    }
                }
            })
        }
        for (var BTNdow of Stop) {
            BTNdow.addEventListener("click", async function (event) {
                event.preventDefault();
                console.log(event.currentTarget.name);
                let response = await fetch("@Url.Content("~/newManagement/OrderStop")" + `?id=${event.currentTarget.name}`)
                let data = await response.text();
                if (data == 1) {
                    $(this).closest("td").siblings().find(".statusname").val("處理中");
                }
            })
        }
        let page = document.querySelectorAll(".paginations a");
        let pagesss = document.querySelectorAll(".paginations span");
        let pages = document.querySelectorAll(".paginations li");
        let pagess = document.querySelectorAll(".paginations ul");
        for (let a of page) {
            a.classList.add('page-link');
        }
        for (let a of pagesss) {
            a.classList.add('page-link');
        }
        for (let a of pages) {
            a.classList.add('page-item')
        }
        for (let a of pagess) {
            a.classList.add('pagination');
        }


     //選取一頁幾筆
        let pagesize=document.getElementById("pagesize");
        let pageSize=0;
        pagesize.addEventListener("change",function(){
            pageSize=pagesize.options[pagesize.selectedIndex].value;
            Filter=filter.options[filter.selectedIndex].value;
            let link="@Url.Content("~/newManagement/OrderList")"+`?pageSize=${pageSize}&filter=${Filter}`;
       document.location.href=link;
        })
      //選取全部商品
            let filtersubmit = document.getElementById("filtersubmit");
            let FFilter = "";
            filtersubmit.addEventListener("click", function () {
            event.preventDefault();
            pageSize=pagesize.options[pagesize.selectedIndex].value;
            let link="@Url.Content("~/newManagement/OrderList")"+`?pageSize=${pageSize}`;
       document.location.href=link;
        })
        //篩選ProductStauts
        let filter=document.getElementById("filter");
        let Filter="";
        filter.addEventListener("change",function(){
            pageSize=pagesize.options[pagesize.selectedIndex].value;
            Filter=filter.options[filter.selectedIndex].value;
            let link="@Url.Content("~/newManagement/OrderList")"+`?filter=${Filter}&pageSize=${pageSize}`;
       document.location.href=link;
        })
    </script>
    }