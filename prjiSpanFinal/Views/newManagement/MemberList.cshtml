@model IEnumerable<CMemberListViewModel>
@{
    ViewData["Title"] = "newProductList";
    var pagedList = (IPagedList)ViewBag.Prods;
}
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Fluent;
@using X.PagedList.Web.Common;
@using prjiSpanFinal.ViewModels.newManagement
@section Styles{
    <style>
        td input {
            width: 160px;
        }
    </style>
}
    <h1>商品</h1>
    <form>
        <input type="search" name="keyword" placeholder="輸入關鍵字或ID進行搜尋" class="form-control" />
        <input type="submit" value="搜尋" class="btn btn-outline-secondary" />
    </form>
    <table class="table" width="120%" style="table-layout:auto">
        <thead>
            <tr>
                <th>
                    會員ID
                </th>
                <th>
                  帳號
                </th>
                <th>
                    密碼
                </th>
                <th>
                    海外or國內
                </th>
                <th>
                    賣家ID
                </th>
                <th>
                    地區
                </th>
                <th>
                    商品狀態
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input value="@item.MemberAccount.MemberId" readonly>
                </td>
                <td>
                    <input value="@item.MemberAccount.MemberAcc" readonly>
                </td>
                <td>
                    <input value="@item.MemberAccount.MemberPw" readonly>
                </td>
                <td>
                    @{
                        string IsTWs = "海外";
                        if ((bool)item.MemberAccount.IsTw){
                            IsTWs = "國內";
                        }
                    }
                    <input value="@IsTWs" readonly>
                </td>
                <td>
                    <input value="@item.RegionName" readonly>
                </td>
                <td>
                    <input value="@item.MemberAccount.Phone" readonly>
                </td>
                <td>
                    <input value="@item.MemberAccount.Email"  readonly>
                </td>
                <td>
                    <input value="@item.MemberAccount.BackUpEmail"  readonly>
                </td>       
                <td>
                    <input value="@item.MemberAccount.Address"  readonly>
                </td>
                <td>
                    <input value="@item.MemberAccount.NickName"  readonly>
                </td>  
                <td>
                    <input value="@item.MemberAccount.Name" readonly>
                </td> 
                <td>
                    <input value="@item.MemberAccount.Birthday" readonly>
                </td> 
                <td>
                    @{
                        var base64Image = Convert.ToBase64String(item.MemberAccount.MemPic);
                        var source = String.Format("data:image/png;base64,{0}", base64Image);
                    }
                    <img src="@source" class="cardImg" alt="..." width="120" />
                </td>
                <td>
                    <input value="@item.MemStatusName" class="msname" readonly>
                </td>
                <td>
                    @{
                        var G = item.MemberAccount.Gender;
                        string gender = "";
                        if(G==0){
                            gender = "其他";
                        }
                       else if (G == 1)
                        {
                            gender = "男";
                        }
                        else
                        {
                            gender = "女";
                        }
                    }
                    <input value="@gender" readonly>
                </td>
                <td>
                    <input value="@item.MemberAccount.Balance" readonly>
                </td>
                <td>
                    <a asp-action="ProductDown" name="@item.MemberAccount.MemberId" class="ProdDown btn btn-outline-secondary">下架</a>
                    <a asp-action="ProductUndo" name="@item.MemberAccount.MemberId" class="ProdUndo btn btn-outline-primary">復原</a>
                    <a asp-action="ProductDelete" name="@item.MemberAccount.MemberId" class="ProdDele btn btn-outline-danger">刪除</a>
                    @Html.ActionLink("查看更多", "memberList2", new { id=item.MemberAccount.MemberId },new{@class="btn btn-primary"})
                    @*@Html.ActionLink("檢視細節", "ProductDetailList", new { id=item.MemberAccount.MemberId },new{@class="btn btn-primary"})*@
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td class="text-muted" colspan="5">
                第 @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) 頁，共 @pagedList.PageCount 頁。
                每頁 @pagedList.PageSize 筆資料，全部共有 @pagedList.TotalItemCount 筆資料。
            </td>
        </tr>
    </tfoot>
</table>
<div style="align-content:center">
    @(Html.Pager(pagedList)
        .Url(page => Url.Action("newProductList", new { page }))
        .Build())
</div>

@section Scripts{
    <script>
        let BTNdel = document.querySelectorAll(".ProdDele");
        let BTNundo = document.querySelectorAll(".ProdUndo");
        let BTNdown = document.querySelectorAll(".ProdDown");
        let PSName = document.querySelectorAll(".psname");
        for (var BTNdele of BTNdel) {
            BTNdele.addEventListener("click", async function (event) {
                event.preventDefault();
                console.log(event.currentTarget.name);
                let response = await fetch("@Url.Content("~/newManagement/ProductDelete")" + `?id=${event.currentTarget.name}`)
                let data = await response.text();
                if (data == 1) {
                    $(this).closest("td").siblings().find(".psname").val("已刪除");
                }
            })
        }
        for (var BTNUnd of BTNundo) {
            BTNUnd.addEventListener("click", async function (event) {
                event.preventDefault();
                console.log(event.currentTarget.name);
                let response = await fetch("@Url.Content("~/newManagement/ProductUndo")" + `?id=${event.currentTarget.name}`)
                let data = await response.text();
                if (data == 1) {
                    $(this).closest("td").siblings().find(".psname").val("上架中");
                }
            })
        }
        for (var BTNdow of BTNdown) {
            BTNdow.addEventListener("click", async function (event) {
                event.preventDefault();
                console.log(event.currentTarget.name);
                let response = await fetch("@Url.Content("~/newManagement/ProductDown")" + `?id=${event.currentTarget.name}`)
                let data = await response.text();
                if (data == 1) {
                    $(this).closest("td").siblings().find(".psname").val("已下架");
                }
            })
        }
    </script>
    }
