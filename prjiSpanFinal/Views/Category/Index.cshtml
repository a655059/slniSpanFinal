@model prjiSpanFinal.ViewModels.Category.CCategoryIndex
@addTagHelper *, prjiSpanFinal
@{
    ViewData["Title"] = "Index";

}
@section Styles{

    <link href="~/css/ADitem.css" rel="stylesheet" />
    <link href="~/css/Category/CategoryStyles.css" rel="stylesheet" />
    <link href="~/css/Home/ItemCard.css" rel="stylesheet" />
    <link href="~/css/WebAD/LargeAD.css" rel="stylesheet" />
    <style>
        .active {
            display: block !important;
            color: yellow !important;
        }
    </style>
}
<div class="CategoryBody">
    <div class="CategoryHeader">
        @{
            <div class="CategoryHeaderTitle">
                <span class="CategoryHeaderTitleText">@Model.SearchType.BigTypeName</span>
                <span class="CategoryHeaderStockText">(@Model.cShowItem.Count)</span>
            </div>
            <div class="CategoryHeaderBody justify-content-start">
                @foreach (var item in Model.lSmallType)
                {
                    <a class="CategoryHeaderItem linknoline" href="@Url.Content("~/Category/SmallType" + "?id=" + item.SmallTypeId)">@item.SmallTypeName</a>
                }
            </div>


        }
    </div>
    <div class="split"></div>
    @if (Model.WebADLarge.Count > 0)
    {
        @await Component.InvokeAsync("WebADLarge", new { list = Model.WebADLarge });
        <div class="split"></div>
    }
    <div class="row">
        <div class="filter-body d-flex  flex-wrap align-content-start">
            @*<div class="filter-types" id="filterTspace">
                    <ul id="filterT-ul">
                        <li>
                            <a href="@Url.Content("~/Category/Index" + "?id=" + Model.SearchType.BigTypeId)" class="linknoline">
                                <span class="fticon">
                                    <i class="fa-solid fa-circle-play"></i>
                                </span>
                                <span class="fttitle fttitlemain">@Model.SearchType.BigTypeName</span>
                            </a>
                        </li>
                        @{
                            foreach (var item in Model.lSmallType)
                            {
                                if (item.BigTypeId == Model.SearchType.BigTypeId)
                                {
                                    <li>
                                        <a href="@Url.Content("~/Category/SmallType" + "?id=" + item.SmallTypeId)" class="linknoline">
                                            <span class="fttitle">@item.SmallTypeName</span>
                                        </a>
                                    </li>
                                }
                            }
                        }
                    </ul>
                </div>*@
            <div class="filter-filter w-100">
                <div class="ff-title d-flex justify-content-center w-100">
                    <span><i class="fa fa-filter"></i></span>
                    <span>條件篩選</span>
                </div>
                <div class="ffsplits">
                    <div class="ff-typestitle w-100 p-1">
                        分類
                    </div>
                    <div class="ff-typestitle-sel">
                        @{

                            foreach (var item in Model.lSmallType)
                            {
                                int stock = @Model.cShowItem.Where(p => p.Product.SmallTypeId == item.SmallTypeId).ToList().Count;


                                <div class="w-100 p-1 ff-types-type d-flex ">
                                    @{
                                        if (stock > 0)
                                        {
                                            <input type="checkbox" class="filterCheckBox" name="ffcb_smalltypeid" id="ffcb_@item.SmallTypeId" />
                                            <input type="hidden" value="@item.SmallTypeId" class="filterSmallID" />
                                        }
                                        else
                                        {
                                            <input type="checkbox" class="filterCheckBox" name="ffcb_smalltypeid" id="ffcb_@item.SmallTypeId" disabled />
                                            <input type="hidden" value="@item.SmallTypeId" class="filterSmallID" />
                                        }
                                    }
                                    <label class="ff-types-type-label" for="ffcb_@item.SmallTypeId">
                                        <span class="ff-types-typeid">
                                            @item.SmallTypeName
                                        </span>
                                        <span class="ff-types-typecount">
                                            (@stock)
                                        </span>
                                    </label>
                                </div>
                            }

                        }
                    </div>
                </div>
                <div class="ffsplits">
                    <div class="ff-typestitle w-100 p-1">
                        價格區間
                    </div>
                    <div class="d-flex w-100 flex-row ff-types-prices">
                        <div class="ff-types-prices-child2">
                            <input placeholder="＄最小值" name="priceMin" id="ff-pricemin" />
                        </div>
                        <div class="ff-types-prices-child1 text-center opacity-50">
                            ─
                        </div>
                        <div class="ff-types-prices-child2">
                            <input placeholder="＄最大值" name="priceMax" id="ff-pricemax" />
                        </div>
                    </div>
                    <button class="w-100 text-center ff-types-prices-btn" id="ff-types-prices-btn">搜尋</button>
                </div>
            </div>
        </div>
        <div class="itembody">
            @if (Model.cShowItem.Count > 0)
            {
                <div class="itembody-filter d-flex align-items-center justify-content-between">

                    <div class="itembody-filter1 "><span>篩選</span></div>
                    <div class="itembody-filter2 d-flex justify-content-start align-items-stretch">
                        <a class="itembody-filter2-btn linknoline SortOrder active" id="SortOrder1">
                            綜合排序
                            <input type="hidden" value="1" />
                        </a>
                        <a class="itembody-filter2-btn linknoline SortOrder" id="SortOrder2">
                            最新商品
                            <input type="hidden" value="2" />
                        </a>
                        <a class="itembody-filter2-btn linknoline SortOrder" id="SortOrder3">
                            熱銷商品
                            <input type="hidden" value="3" />
                        </a>
                        <a class="itembody-filter2-btn linknoline dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                            價格排序
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                            <li>
                                <a class="dropdown-item SortOrder" id="SortOrder4">
                                    <i class="fa fa-arrow-down"></i>
                                    價格：由高至低
                                    <input type="hidden" value="4" />
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item SortOrder" id="SortOrder5">
                                    <i class="fa fa-arrow-up"></i>
                                    價格：由低至高
                                    <input type="hidden" value="5" />
                                </a>
                            </li>
                        </ul>
                    </div>

                </div>
            }
            <div class="itemcol" id="OriginShowItem">

                @{
                    if (Model.cShowItem.Count > 0)
                    {

                        @*@await Component.InvokeAsync("CategoryShow", new { shopProduct = Model.cShowItem });*@

                    }
                    else
                    {
                        <div>
                            暫待新增商品
                        </div>
                    }
                }

            </div>


            <div class="row " id="divPage">
                <div class="d-flex justify-content-center">
                    <select style="width:150px" class="form-select form-select-lg mb-3" id="pagecountselect" aria-label=".form-select-lg example">
                        <option value="1">每頁1個</option>
                        <option value="5" selected>每頁5個</option>
                        <option value="10">每頁10個</option>
                        <option value="20">每頁20個</option>
                    </select>
                </div>
                <div class="d-flex justify-content-center">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination">
                            <li class="page-item" id="orderpageup">
                                <a class="page-link" href="#OriginShowItem" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            <li class="page-item" id="orderpagedown">
                                <a class="page-link" href="#OriginShowItem" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
                <div class="d-flex justify-content-center">
                    <span id="totalpagesdisplay"></span>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/Category/Index.js"></script>
    <script>
        let filter = [];
        let priceMin = 0;
        let priceMax = 999999999;

        let SortOrder = 1;
        //let pages = 0;
        let BigtypeId = "@Model.SearchType.BigTypeId";
        let sort1 = document.getElementById("SortOrder1");
        let menu = document.getElementById("dropdownMenuLink");

        let eachpage = 5;
        let nowpages = 1;
        let pagecount = 1;
        const pagecountselect = document.querySelector("#divPage");


        $(".filterCheckBox").click(function (event) {
            SortOrder = 1;
            let target = $(event.target);
            let ischecked = target.prop('checked');
            let targetvalue = target.siblings("input").val();

            $(".active").removeClass("active");
            sort1.classList.add("active");
            if (menu.classList.contains("active")) {
                menu.textContent = "價格排序";
            }

            if (ischecked) {
                filter.push(targetvalue);
                CallgetJSON();
            }
            else {
                let targetindex = filter.indexOf(targetvalue);
                if (targetindex > -1) {
                    filter.splice(targetindex, 1);
                }
                CallgetJSON();
            }
        });

        $(".SortOrder").click(function (event) {

            let target = $(event.target);
            $(".active").removeClass("active");
            target.addClass("active");

            if (this == $(".SortOrder")[3] || this == $(".SortOrder")[4]) {
                if (!menu.classList.contains("active")) {
                    menu.classList.add("active");
                }
                menu.textContent = this.textContent.trim();
            }
            else {
                menu.textContent = "價格排序";
            }

            SortOrder = target.find("input").val();
            CallgetJSON();
        });

        $("#ff-types-prices-btn").click(function (event) {
            let minval = 0
            let maxval = 9999999;
            if (parseInt($('#ff-pricemin').val()) > 0); {
                minval = $('#ff-pricemin').val();
            }
            if (parseInt($('#ff-pricemax').val()) > 0) {
                maxval = $('#ff-pricemax').val();
            }

            if (parseInt(minval) > parseInt(maxval)) {
                //todo#2
                alert("數值設定錯誤！");
            }
            if (minval <= maxval) {
                priceMin = parseInt(minval);
                priceMax = parseInt(maxval);
                CallgetJSON();
            }
        })

        jQuery.postJSON = function (url, data, callback) {
            jQuery.post(url, data, callback, "json");
        };

        CallgetJSON();
        function CallgetJSON() {
            $.postJSON(`/Category/SortOrder`, { BigTypeId: BigtypeId, filter: filter, pages: nowpages, eachpage: eachpage, SortOrder: SortOrder, priceMin: priceMin, priceMax: priceMax }, function (data) {
                $("#OriginShowItem").html("") ;

                if (data.list.length > 0) {
                    $("#OriginShowItem").append(Items(data.list));
                    PageNumFill(data.count);
                }
                else {
                    $("#OriginShowItem").html("<div>暫待新增商品</div>");
                    PageNumFill(0);
                }
            })
        }

        function PageNumFill(c) {
            pagecount = Math.ceil(Math.max(1, c) / eachpage);
            $("#totalpagesdisplay").html(`共${pagecount}頁，${c}筆資料`);
            let startpage = Math.max(1, Math.min(pagecount - 4, parseInt(nowpages) - 2));
            let endpage = Math.min(pagecount, Math.max(5, parseInt(nowpages) + 2));
            $("#orderpagedown").siblings(".orderpagenumclicklist").remove();
            for (let i = startpage; i <= endpage; i++) {
                if (i == nowpages) {
                    $("#orderpagedown").before(`<li class="page-item active orderpagenumclicklist"><a class="page-link orderpagenumclick" href="#OriginShowItem">${i}</a></li>`);
                }
                else {
                    $("#orderpagedown").before(`<li class="page-item orderpagenumclicklist"><a class="page-link orderpagenumclick" href="#OriginShowItem">${i}</a></li>`);
                }
            }
        }


        $(document).on("click", ".orderpagenumclick", function () {
            nowpages = $(this).html();
            /*$("#salescourtcardbody").empty();*/
            CallgetJSON();
        })

        $("#pagecountselect").change(function () {
            eachpage = $("#pagecountselect option:selected").val();
            nowpages = 1;
            CallgetJSON();
        });


        $("#orderpagedown").click(function () {
            /*let pagescount = $(".orderpagenumclicklist").length;*/
            nowpages = Math.min(parseInt(nowpages) + 1, pagecount);
            /*nowpages = 2;*/
            /*$("#salescourtcardbody").empty();*/
            CallgetJSON();
        })


        $("#orderpageup").click(function () {
            nowpages = Math.max(parseInt(nowpages) - 1, 1);
            /*nowpages = 1;*/
            /*$("#salescourtcardbody").empty();*/
            CallgetJSON();
        })

        function Items(data) {
            let item = "";
            for (let i = 0; i < data.length; i++) {
                var sub1 = "";
                var sub1BG = "";
                if (data[i].effects.includes(1)) {
                    sub1 = "SubAD1";
                    sub1BG = "SubAD1BG";
                }
                var sub2 = "";
                var sub2BG = "";
                if (data[i].effects.includes(2)) {
                    sub2 = "SubAD2";
                    sub2BG = "SubAD2BG";
                }
                var sub3 = "";
                var sub3BGbox = "";
                if (data[i].effects.includes(3)) {
                    sub3 = "SubAD3";
                    sub3BGbox = "SubAD3BGBox";
                }

                let productLink = "@Url.Content("~/Item/Index")" + "?id=" + data[i].product.productId;
                item += `<div class="sellsitem ${sub1BG} ${sub2}">`
                if (data[i].effects.includes(3)) {
                    item += `<div class="${sub3BGbox}">
                            <img src="/img/Homepage/SellCrown.png" class="${sub3}" />
                        </div>`
                }
                item += `<a class="linknoline sellsitem-imgbox" href="${productLink}">`;

                if (data[i].pic != null)
                {

                    item += `<img src="data:image;base64,${data[i].pic}" class="cardImg" alt="..." />`;
                }
                else
                {
                    item +=`<img src="/img/imageNotFound.png" class="cardImg" alt="此商品沒有圖片" />`
                }
                item += `<div class="px-1 d-flex flex-column justify-content-between cardInfoArea ${sub1BG} ${sub2BG}"><div class="cardTitleBox">
    <div class="cardTitle ${sub1}">${ data[i].product.productName}</div></div>`
                if (data[i].price.length == 1)
                    {
                    item += `<div class="cardPrice ${sub1}">$` +`${Math.round(data[i].price[0])}</div>`
                    }
                    else
                    {
                    item += `<div class="cardPrice ${sub1}">$`+`${Math.round(data[i].price[0])} - $`+`${Math.round(data[i].price[1])}</div>`
                }

                item += `<div class="cardInfo d-flex justify-content-between flex-row">
                        <div class="starBox mt-1">
                            <div class="d-flex justify-content-start">
                                <div class="starImg">
                                    <img src="/img/YellowStar.png" alt="" class="me-1 d-block" />
                                </div>
                                <div class="${sub1}">${data[i].starCount.toFixed(1)}</div>
                            </div>
                        </div>
                        <div class="text-end sells ${sub1}">已賣出<span>${data[i].salesVolume}</span></div>

                    </div>
                </div>
            </div>`;
            }
            return item;
        }

    </script>
}