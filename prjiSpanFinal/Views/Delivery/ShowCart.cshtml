@model prjiSpanFinal.ViewModels.Delivery.CDeliveryShowCartViewModel
@{
    ViewData["Title"] = "ShowCart";
    Dictionary<int, string> sellerDic = new Dictionary<int, string>();
    foreach (var i in Model.cart)
    {
        if (sellerDic.ContainsKey(i.sellerID))
        {
            continue;
        }
        else
        {
            sellerDic.Add(i.sellerID, i.sellerAcc);
        }
    }
    List<int> sellerIDList = sellerDic.Keys.ToList();
}

@section Styles{
    <link href="~/css/Delivery/ProgressBar.css" rel="stylesheet" />
    <link href="~/css/Delivery/DeliveryShowCar.css" rel="stylesheet" />
}
<div class="progressBar">
    @await Component.InvokeAsync("DeliveryProgressBar", new { checkoutPage = 0 })
</div>
<div class="layout w-100 row mt-3">
    <div class="col-9">
        @{
            foreach (int sellerID in sellerIDList)
            {
                <div class="sellerLayout mb-2 border rounded-2 px-2 py-3">
                    <div class="form-check border-bottom pb-2 d-flex align-items-center">
                        <input class="selectAll form-check-input" type="checkbox" value="" id="flexCheckDefault" checked>
                        <label class="sellerAcc form-check-label mx-2 fw-bold fs-3" for="flexCheckDefault">@sellerDic[sellerID]</label><span class="fs-5">的賣場</span>
                    </div>
                    @foreach (var i in Model.cart)
                    {
                        if (i.sellerID == sellerID)
                        {
                            string imgSrc = "";
                            try
                            {
                                string base64 = Convert.ToBase64String(i.productDetail.Pic);
                                imgSrc = $"data:image/gif;base64,{base64}";
                            }
                            catch
                            {
                                imgSrc = Url.Content("~/img/imageNotFound.png");
                            }
                            <div class="itemLayout d-flex justify-content-between align-items-center my-2">
                                <div class="d-flex justify-content-start align-items-center w-75">
                                    <input class="selectItem form-check-input " type="checkbox" value="" checked>
                                    <div class="mx-3">
                                        <div class="itemImgDiv">
                                            <img src="@imgSrc" class="productDetailID" id="@i.productDetail.ProductDetailId"/>
                                        </div>
                                    </div>
                                    <div>
                                        @{ 
                                            string productLink = Url.Content("~/Item/Index") + "?id=" + i.product.ProductId;
                                        } 
                                        <a href="@productLink" class="productLink"><label class="productName form-check-label">@i.product.ProductName</label></a>
                                        <div class="text-black-50">@i.productDetail.Style</div>
                                        <div class="text-danger">$<span class="itemPrice">@i.productDetail.UnitPrice.ToString("0")</span></div>
                                    </div>
                                </div>
                                <div class="choseCount d-flex justify-content-end align-items-center w-25">
                                    <div class="w-75">
                                        <div class="d-flex justify-content-center">
                                            <button class="countMinus btnCount fw-bold">-</button>
                                            <input type="number" name="Count" class="itemCount" value="@i.orderDetail.Quantity" min="1" max="@i.productDetail.Quantity" />
                                            <button class="countPlus btnCount fw-bold">+</button>
                                        </div>
                                        <div class="text-center mt-1 d-none" style="font-size:0.5em">庫存僅剩<span class="mx-2">@i.productDetail.Quantity</span>件</div>
                                    </div>
                                    <div class="w-25 text-center">
                                        <button class="btnDelete btn btn-sm" id="@i.orderDetail.OrderDetailId"><i class="fa-solid fa-trash-can text-danger"></i></button>
                                    </div>
                                </div>

                            </div>
                        }
                    }
                    <div class="ship border-top d-flex align-items-center pt-3">
                        <div>
                            <img src="~/img/truck.png" class="d-block"/>
                        </div>
                        <div class="mx-2">
                            @foreach (var i in Model.shipperToSeller)
                            {
                                if (i.sellerID == sellerID)
                                {
                                    foreach (var j in i.shippers)
                                    {
                                        <span>@j.ShipperName</span><span>$@j.Fee;</span>
                                    }
                                }
                                else
                                {
                                    continue;
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    <div class="col-3">
        <div class="showCalTotalPriceVC w-100">
            @await Component.InvokeAsync("CalTotalPrice", new { id = 1 })
        </div>
    </div>
</div>

<div class="modal" tabindex="-1" id="showNoItemInCart">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <p>購物車中無商品了，將為您導向主頁面。</p>
                <a href="@Url.Content("~/Home/Index")"><button type="button" class="btn btn-warning btn-sm">繼續選購</button></a>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="~/js/Delivery/DeliveryShowCart.js"></script>
    <script src="~/js/Delivery/DeliveryCheckout.js"></script>
    <script src="~/js/Delivery/ProgressBar.js"></script>
    <script>
        $(".btnDelete").click(async function () {
            const yes = confirm("確定要刪除嗎?");
            if (yes) {
                const orderDetailID = $(this).attr("id");
                let response = await fetch("@Url.Content("~/Delivery/DeleteOrderDetail")" + `?orderDetailID=${orderDetailID}`);
                let data = await response.text();
                console.log(data);
                if (data == 0) {
                    $(this).closest(".sellerLayout").remove();
                }
                if (data == 1) {
                    $(this).closest(".itemLayout").remove();
                }
                if ($(".sellerLayout").length < 1) {
                    $(".progressBar").addClass("d-none");
                    $(".layout").load("@Url.Action("ShowNoItemInCart", "Delivery")");
                }
                else {
                    CalTotalPrice();
                }
            }
            else {
                return;
            }

        });
        $("#goCheckout").click(async function () {
            if ($(".selectItem:checked").length >= 1) {
                let orderDetailIDInfo = [];
                $(".selectItem:checked").each(function () {
                    const orderDetailID = Number($(this).closest(".itemLayout").find(".btnDelete").attr("id"));
                    const purchaseCount = Number($(this).closest(".itemLayout").find(".itemCount").val());
                    const productName = $(this).closest(".itemLayout").find(".productName").html();
                    const productDetailID = Number($(this).siblings().find(".productDetailID").attr("id"));
                    const sellerAcc = $(this).closest(".sellerLayout").find(".sellerAcc").html();
                    const unitPrice = $(this).siblings().find(".itemPrice").html();
                    const object = {
                        "orderDetailID": orderDetailID,
                        "purchaseCount": purchaseCount,
                        "productName": productName,
                        "productDetailID": productDetailID,
                        "sellerAcc": sellerAcc,
                        "unitPrice":unitPrice,
                    };
                    orderDetailIDInfo.push(object);
                });
                const data = JSON.stringify(orderDetailIDInfo);
                const response = await fetch("@Url.Content("~/Delivery/SetItemToCheckoutSession")" + `?purchaseItemInfo=${data}`);
                const result = await response.text();
                if (result == 0) {
                    alert("請再點一次去結帳");
                    return;
                }
                else {
                    window.location.href = "@Url.Content("~/Delivery/Checkout")"
                }
            }
            else {
                alert("請選取至少一個商品");
                return;
            }
            
        });
    </script>
}