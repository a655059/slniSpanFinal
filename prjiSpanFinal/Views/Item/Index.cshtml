@using Microsoft.AspNetCore.Http
@model prjiSpanFinal.ViewModels.Item.CItemIndexViewModel
@{
    ViewData["Title"] = "Index";
    int memberID = 0;
    if (Model.user != null)
    {
        memberID = Model.user.MemberId;
    }
}
@section Styles{
    <link rel="stylesheet" href="@Url.Content("~/css/Item/ItemIndex.css")" />
    <link href="@Url.Content("~/css/ProductCard.css")" rel="stylesheet" />
    <link href="@Url.Content("~/css/Item/ShowItemComment.css")" rel="stylesheet" />
}
<div class="memberID d-none">@memberID</div>
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Content("~/Home/Index")">蝦到爆</a></li>
        <li class="breadcrumb-item"><a href="#">@Model.bigType.BigTypeName</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Model.smallType.SmallTypeName</li>
    </ol>
</nav>
<div class="d-flex justify-content-between">
    <div class="productPhoto">
        <div class="bigPhoto position-relative">
            <div class="addItemLike">加入按讚好物</div>
            @{
                if (Model.Islike)
                {
                    <i class="itemHeart fa-solid fa-heart position-absolute top-0 end-0 fs-2 opacity-50 text-danger"></i>
                }
                else
                {
                    <i class="itemHeart fa-solid fa-heart position-absolute top-0 end-0 fs-2 opacity-50"></i>
                }
                string imgSrc1 = "";
                try
                {
                    string base64 = Convert.ToBase64String(Model.productPics[0]);
                    imgSrc1 = $"data:image/gif;base64,{base64}";
                }
                catch
                {
                    imgSrc1 = Url.Content("~/img/imageNotFound.png");
                }
                <img src="@imgSrc1" />
            }
        </div>
        <div class="smallPhoto d-flex justify-content-center">
            @foreach (var i in Model.productPics)
            {
                string imgSrc2 = "";
                try
                {
                    string base65 = Convert.ToBase64String(i);
                    imgSrc2 = $"data:image/gif;base64,{base65}";
                }
                catch
                {
                    imgSrc2 = Url.Content("~/img/imageNotFound.png");
                }
                <div><img src="@imgSrc2" /></div>
            }
        </div>
        <div style="font-size:14px">
            <div class="d-flex justify-content-between border-top border-bottom py-2">
                <div>商品編號:<span class="ms-2">@Model.product.ProductId</span></div>
                @{
                    if (Model.user == null)
                    {
                        <label class="text-primary">登入後方可使用檢舉功能</label>
                    }
                    else
                    {
                        <a id="ReportBTN" href="#" class="text-primary" data-bs-toggle="modal" data-bs-target="#reportmodal">檢舉</a>
                    }
                }
            </div>
            <div>
                <div class="fs-6 fw-b">商品備註</div>
                <ul>
                    <li>物品狀況:全新</li>
                    <li>物品所在地:台灣，<span>@Model.sellerRegion</span></li>
                    <li>物品最新更新時間:<span>@Model.product.EditTime.ToString("yyyy-MM-dd")</span></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="itemInfo">
        <h4>@Model.product.ProductName</h4>
        <div class="d-flex justify-content-start align-items-center">
            @{
                if (Model.commentCount == 0)
                {
                    <div class="opacity-50">尚無評價</div>
                }
                else
                {
                    int starCount = Convert.ToInt32(Math.Round(Model.avgCommentStar, MidpointRounding.AwayFromZero));
                    for (int i = 1; i <= 5; i++)
                    {
                        if (i <= starCount)
                        {
                            <i class="text-warning fa-solid fa-star"></i>
                        }
                        else
                        {
                            <i class="fa-regular fa-star"></i>
                        }
                    }
                    <div class="ms-3">
                        @Model.avgCommentStar
                    </div>
                }
                <div class="ms-1">
                    <span>(</span><a href="#">@Model.commentCount</a><span>)</span>
                </div>
                <div class="ms-3">|</div>
                <div class="ms-3">已售出:<span>@Model.salesVolume</span></div>
            }
        </div>
        <div class="itemDetails">
            <form method="post" action="/Delivery/Checkout">
                <div class="d-flex justify-content-start align-items-center mb-1">
                    <div class="itemKey">直購價:</div>
                    @{
                        string price = "";
                        List<decimal> prices = new List<decimal>();
                        foreach (var p in Model.productDetails)
                        {
                            prices.Add(p.UnitPrice);
                        }
                        decimal maxPrice = prices.Max();
                        decimal minPrice = prices.Min();
                        if (minPrice == maxPrice)
                        {
                            price = "$" + minPrice.ToString("0");
                        }
                        else
                        {
                            price = $"${minPrice.ToString("0")} - ${maxPrice.ToString("0")}";
                        }
                        <div class="itemPrice ms-3 fs-3 fw-bold text-danger">@price</div>
                    }
                </div>
                <div class="d-flex justify-content-between align-self-start mb-1">
                    <input type="hidden" name="purchaseProduct" value="2113" />
                    <div class="itemKey">規格:</div>
                    <div class="itemStyleContent d-flex flex-wrap ms-3">
                        @{
                            foreach (var i in Model.productDetails)
                            {
                                string imgSrc = "";
                                try
                                {
                                    string base65 = Convert.ToBase64String(i.Pic);
                                    imgSrc = $"data:imgae/gif;base64,{base65}";
                                }
                                catch
                                {
                                    imgSrc = Url.Content("~/img/imageNotFound.png");
                                }
                                string style = i.Style;
                                int productDetailID = i.ProductDetailId;
                                string labelId = "style" + productDetailID;
                                string unitPrice = i.UnitPrice.ToString("0");
                                int quantity = i.Quantity;
                                <div class="ms-1 mb-1">
                                    <input type="radio" class="btn-check" name="purchaseStyle" id="@labelId" autocomplete="off" value="@productDetailID">
                                    <label class="purchaseStyle btn btn-outline-secondary btn-sm rounded-1" for="@labelId">@style</label>
                                    <div class="d-none price">@unitPrice</div>
                                    <img class="d-none itemStyleImg" src="@imgSrc" />
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="d-flex justify-content-start align-items-center mb-3">
                    <label for="itemCount" class="itemKey">數量:</label>
                    <input type="number" value="1" name="purchaseCount" min="1" class="ms-3" id="itemCount" />
                    <div class="itemRemainingQty ms-3">還剩件數</div>
                </div>
                <div class="position-relative d-flex justify-content-start align-items-center ps-5">
                    <div class="dollarIcon position-absolute fs-3 fw-bold text-warning">+<span></span></div>
                    <input type="button" value="加入購物車" class="addToCart btn btn-warning me-3 ms-4" />
                    <input type="submit" value="直接購買" class="buyDirectly btn btn-success" />
                </div>
            </form>
        </div>
        <div class="my-2 py-4 d-flex border-top border-bottom">
            <div class="d-flex me-2" style="font-size:14px">
                <div class="border py-4 px-2">
                    <div class="bg-danger text-white rounded-5 w-50 px-1 my-1 text-center">限時限量</div>
                    <div class="fs-6 fw-bold my-1">滿$799<span class="ms-2">現折$50</span></div>
                    <div class="my-1">
                        <div>限時優惠滿799折50<span>限量輸碼PO50</span></div>
                        <div>2022/08/30<span class="ms-1">18:00</span>-2022/11/29<span class="ms-1">00:00</span></div>
                    </div>
                </div>
                <button class="btn btn-warning rounded-0 fw-bold">領取</button>
            </div>
            <div class="d-flex" style="font-size:14px">
                <div class="couponDiv">
                    <img src="~/img/Event/Coupon_Jacob.png" />
                </div>
                <div class="border py-4 px-2">
                    <div class="bg-danger text-white rounded-5 w-50 px-1 my-1 text-center">限時限量</div>
                    <div class="fs-6 fw-bold my-1">滿$799<span class="ms-2">現折$50</span></div>
                    <div class="my-1">
                        <div>限時優惠滿799折50<span>限量輸碼PO50</span></div>
                        <div>2022/08/30<span class="ms-1">18:00</span>-2022/11/29<span class="ms-1">00:00</span></div>
                    </div>
                </div>
                @*<button class="btn btn-warning rounded-0 fw-bold">領取</button>*@
            </div>
        </div>
        <div class="row">
            <div class="col-8" style="font-size:14px">
                <div class="d-flex justify-content-start">
                    <div class="me-5">付款方式:</div>
                    <div>
                        @{
                            foreach (var i in Model.sellerPayment)
                            {
                                <div>@i.payment<span class="mx-2 text-danger" style="font-size:12px"><span>手續費:</span>@i.fee</span></div>
                            }
                        }
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="me-5">運送方式:</div>
                    <div>
                        @{
                            foreach (var i in Model.sellerShipper)
                            {
                                <div>@i.shipper<span class="mx-2 text-danger" style="font-size:12px">$<span>@i.fee</span></span></div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-4" style="font-size:14px">
                <div class="bg-secondary text-white fw-bold ps-2">買家資訊</div>
                <div class="ps-2">@Model.seller.MemberAcc<span class="ms-3"><a href="#"><i class="talkToSeller fa-solid fa-comment-dots text-warning"></i></a></span></div>
                <div class="d-flex align-items-center ps-2">
                    <div>全部商品:</div>
                    <div class="ms-3"><a href="@Url.Content("~/SalesCourt/賣場")" class="fs-5 fw-bold text-primary ">@Model.sellerProductIDs.Count</a></div>
                </div>
                <div class="d-flex align-items-center ps-2">
                    <div>賣場評價:</div>
                    <div class="ms-3">
                        @{
                            if (Model.sellerCommentCount > 0)
                            {
                                string sellerComment = Model.avgSellerCommentStar.ToString("0.0") + "  " + (Model.sellerCommentCount);
                                <a href="@Url.Content("~/SalesCourt/評價")" class="fs-5 fw-bold text-primary ">@sellerComment</a>
                            }
                            else
                            {
                                <a href="@Url.Content("~/SalesCourt/評價")" class="opacity-50 text-primary" style="font-size:14px">尚無賣場評價</a>
                            }
                        }
                    </div>
                </div>
                <div class="ps-2"><a href="@Url.Content("~/SalesCourt/關於我")" class="text-primary">關於我</a></div>
                <div class="ps-2"><a href="@Url.Content("~/SalesCourt/賣場")" class="text-primary">追蹤賣家</a></div>
            </div>
        </div>
    </div>
</div>
<div class="sellerProducts my-3">
    <div class="fs-4 fw-bold text-primary">賣家精選</div>
    @await Component.InvokeAsync("ShowSelectedProducts", new { productIDs = Model.sellerProductIDs })
</div>



<div>
    <div class="list-group list-group-horizontal mb-3">
        <button type="button" class="list-group-item-warning list-group-item list-group-item-action active" id="description" aria-current="true">商品說明</button>
        <button type="button" class="list-group-item-warning list-group-item list-group-item-action" id="comment">商品評價 (4.0/5)</button>
        <button type="button" class="list-group-item-warning list-group-item list-group-item-action" id="buyerCount">購買人次 (55)</button>
    </div>
    <div class="itemDescription rounded-2">
        <div class="sellerName bg-warning bg-opacity-50 fs-3 fw-bold ps-2" id="@Model.seller.MemberAcc">@Model.seller.MemberAcc<span>的商店</span></div>
        <div class="w-100 bg-warning bg-opacity-10 pb-3">
            <div class="description">
                @Model.product.Description;
            </div>
            @{
                foreach (var i in Model.productPics)
                {
                    string imgSrc = "";
                    try
                    {
                        string base64 = Convert.ToBase64String(i);
                        imgSrc = $"data:image/gif;base64,{base64}";
                    }
                    catch
                    {
                        imgSrc = Url.Content("~/img/imageNotFound.png");
                    }
                    <div class="productImg"><img src="@imgSrc" /></div>
                }
            }
        </div>
    </div>
    <div class="commentVC d-none">
        @await Component.InvokeAsync("CShowItemComment", new { productID = Model.product.ProductId, page = 1 })
    </div>
    <div class="buyerCountVC d-none">
        @await Component.InvokeAsync("ShowBuyerCount", new { productID = Model.product.ProductId, page = 1 })
    </div>
</div>

<!--Modal-->

<div class="modal fade" id="reportmodal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="top: 7rem !important;">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">檢舉視窗</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div>
                    <label>產品名稱</label>
                    <input class="form-control" placeholder="@Model.product.ProductName" readonly>
                    <input id="ProductId" type="hidden" value="@Model.product.ProductId">
                    @{
                        if (Model.user == null)
                        {
                            Model.user = new MemberAccount();
                            Model.user.MemberId = 1;
                        }
                    }
                    <input id="ReporterID" type="hidden" value="@Model.user.MemberId">
                    <label>檢舉理由</label>
                    <select id="ReportTypeId" class="form-select ReportTypeId" name="ReportTypeId">
                        @{
                            foreach (var i in Model.ReportType)
                            {
                                <option value="@i.ReportTypeId">@i.ReportTypeName</option>
                            }
                        }
                    </select>
                    <label>檢舉理由</label>
                    <textarea id="Reason" class="form-control"></textarea>
                    <div class="form-group">
                        圖片<input type="file" id="ReportPic" class="form-control-file">
                    </div>
                    <p> 圖片預覽</p>
                    <img id="Preview" style="max-height:200px;" />
                </div>
            </div>
            <div class="modal-footer">
                <button id="save" type="button" class="btn btn-warning">新增</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
            </div>
        </div>
    </div>
</div>

<!--Modal End-->
@section Scripts{
    <script src="@Url.Content("~/js/Item/ItemIndex.js")"></script>
    <script src="@Url.Content("~/js/ShowSelectedProducts.js")"></script>
    <script src="@Url.Content("~/js/Item/ShowItemComment.js")"></script>
    <script>
        $(".bigPhoto .itemHeart").click(async function () {
            const memberID = Number($(".memberID").html());
            let requestUrl = "@Url.Content("~/Item/AddItemLike")" + `?memberID=${memberID}&productID=${@Model.product.ProductId}`;
            let response = await fetch(requestUrl);
            let data = await response.text();
            if (data == "0") {
                alert("請先登入方可加入我的最愛");
                return;
            }
            else if (data == "1") {
                $(this).removeClass("text-danger").addClass("text-danger");
            }
            else {
                $(this).removeClass("text-danger");
            }
            console.log(data);
        })

        $(".addToCart").click(async function () {
            const memberID = @memberID;
            const quantity = Number($("input[name='purchaseCount']").attr("max"));
            if (memberID <= 1) {
                alert("請先登入再加入購物車");
                return false;
            }
            else if ($("input[name='purchaseStyle']:checked").length != 1) {
                alert("請選擇一個規格");
                return false;
            }
            else if (Number($("input[name='purchaseCount']").val()) <= 0 || Number($("input[name='purchaseCount']").val()) > quantity) {
                alert("你選的數量有誤");
                return false;
            }
            else {
                const productDetailID = $("input:checked").val();
                const quantity = $("#itemCount").val();
                const requestUrl = "@Url.Content("~/Delivery/AddItemToCart")" + `?productDetailID=${productDetailID}&quantity=${quantity}`;
                const response = await fetch(requestUrl);
                const data = await response.json();
                if (data != "0") {
                    $(".dollarIcon").children().html(quantity);
                    $(".dollarIcon").animate({
                        top: "-=50",
                        opacity: "1",
                        zIndex: "0"
                    }, 50).animate({
                        top: "-=30",
                        opacity: "0",
                    }, 500).animate({
                        top: "+=80",
                        zIndex: "-1"
                    });
                    $(".itemRemainingQty").html("還剩" + data[1] + "件");
                    $("input[name='purchaseCount']").attr("max", Number(data[1]))
                    if ($("input[name='purchaseCount']").val() > Number(data[1])) {
                        $("input[name='purchaseCount']").val(Number(data[1]));
                    }
                    if (Number(data[1]) <= 0) {
                        $("input:checked").attr("disabled", true);
                        $("input[name='purchaseCount']").val(Number(data[1]));
                    }
                    $("#itemCountInCart").html(data[0]);
                }
                else {
                    alert("輸入商品數量有誤");
                    return false;
                }
            }
        });
        $(".purchaseStyle").click(async function () {
            let price = $(this).siblings(".price").html();
            $(".itemPrice").html(price);
            $(this).removeClass("btn-outline-secondary").removeClass("btn-danger").addClass("btn-danger").closest("div").siblings().children("label").removeClass("btn-outline-secondary").removeClass("btn-danger").addClass("btn-outline-secondary");
            const productDetailID = $(this).siblings("input").val();
            const requestUrl = "@Url.Content("~/Delivery/ShowQtyToSpecificMember")" + `?productDetailID=${productDetailID}`;
            const response = await fetch(requestUrl);
            const data = await response.text();
            $(".itemRemainingQty").html("還剩" + data + "件");
            if (Number(data) <= 0) {
                $("input[name='purchaseCount']").attr("min", 0);
                $("input[name='purchaseCount']").attr("max", 0);
                $("input[name='purchaseCount']").val(0);
                $("input[name='purchaseCount']").prop("disabled", true);
                $(".addToCart").prop("disabled", true);
                $(".buyDirectly").prop("disabled", true);
                $(this).prop("disabled", true);
            }
            else {
                $("input[name='purchaseCount']").attr("min", 1);
                $("input[name='purchaseCount']").attr("max", Number(data));
                $("input[name='purchaseCount']").val(1);
                $("input[name='purchaseCount']").prop("disabled", false);
                $(".addToCart").prop("disabled", false);
                $(".buyDirectly").prop("disabled", false);
                $(this).prop("disabled", fales);
            }

        });

        //檢舉功能圖片預覽
        $('#ReportPic').on('change', function (e) {
            const file = this.files[0];
            const objectURL = URL.createObjectURL(file);    // 使用 createObjectURL 產生圖片url
            $('#Preview').attr('src', objectURL);
        });
        //檢舉功能圖片預覽

        //檢舉功能
        let ProductId = document.getElementById("ProductId");
        let ReporterID = document.getElementById("ReporterID");
        let ReportTypeID = document.getElementById("ReportTypeId");
        let Reason = document.getElementById("Reason");
        let Report;
        let ReportPic;
        let Save = document.getElementById("save");

        $("#ReportPic").change(function () {
            const photos = document.getElementById("ReportPic").files;
            if (photos) {
                $.each(photos, function (idx, photo) {
                    let reader = new FileReader();
                    reader.readAsDataURL(photo);
                    reader.onloadend = function () {
                        ReportPic = reader.result;
                    }
                });
            }
        });


        Save.addEventListener("click", () => {
            if (!Reason.value || ReportPic == null) {
                alert("所有欄位皆是必填!");
            }
            else {
                Report = {
                    ProductId: ProductId.value,
                    ReporterID: ReporterID.value,
                    ReportTypeID: ReportTypeID.options[ReportTypeID.selectedIndex].value,
                    Reason: Reason.value,
                    ReportPic: ReportPic.split(',')[1]
                }
                jQuery.postJSON = function (url, data, callback) {
                    jQuery.post(url, data, callback, "json");
                };
                console.log(Report);
                $.postJSON("/Item/ReportCreate", { d: Report }, function () { });
                alert("檢舉成功");
                $("#reportmodal").modal('hide');
            }
        })


        $(".talkToSeller").click(function () {
            const sellerAcc = $(".sellerName").attr("id");
            happy_popup(sellerAcc);
        });
    </script>
}
