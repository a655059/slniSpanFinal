@addTagHelper *, prjiSpanFinal
@model prjiSpanFinal.ViewModels.Category.MyLikeCategoryIndex
@using prjiSpanFinal.ViewModels
@using Microsoft.AspNetCore.Http
@using System.Text.Json
@using System.Linq;
@section Styles
{
    <link href="~/css/MemberUI/sidebar.css" rel="stylesheet" />
    <link href="~/css/Home/ItemCard.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/Item/ItemIndex.css" />
    <link href="~/css/Category/CategoryStyles.css" rel="stylesheet" />

}
<style>
    /*        .list a:link{text-decoration:none;}
        .list a:visited{color:aquamarine;}
        .list a:hover{text-decoration:underline;color:green;}
        .list a:active{color:red;font-size:30px;}*/

    figcaption {
        color: #FF0000;
        font-size: 40px;
        margin: 0 auto;
    }

    .list > li > a:link {
        text-decoration: none;
        color: darkslategrey;
    }

    .list > li > a:visited {
        color: aquamarine;
    }

    .list > li > a:hover {
        text-decoration: underline;
        color: green;
    }

    .list > li > a:active {
        color: red;
        font-size: 30px;
    }
</style>

@*@{
        var starCount=0;
        int memberID = 0;
        int productID = 0;
        int productDetialID = 0;
        int orderdetailID = 0;
        int salesCount = 0;
        int statsID = 0;
        if (Context.Session.Keys.Contains(CDictionary.SK_LOGINED_USER))
        {
            string json = Context.Session.GetString(CDictionary.SK_LOGINED_USER);
            MemberAccount loginMember = JsonSerializer.Deserialize<MemberAccount>(json);
            iSpanProjectContext db = new iSpanProjectContext();
            memberID = loginMember.MemberId;
            productID = db.Products.FirstOrDefault(p => p.MemberId == memberID).ProductId;
            productDetialID = db.ProductDetails.FirstOrDefault(p => p.ProductId == productID).ProductDetailId;
            orderdetailID = db.OrderDetails.FirstOrDefault(p => p.ProductDetailId == productDetialID).OrderDetailId;

            starCount = db.Comments.Where(p => p.OrderDetailId == orderdetailID).Select(p=>(int)p.CommentStar).FirstOrDefault();


            statsID = db.Orders.FirstOrDefault(p => p.MemberId == memberID).StatusId;
            //statsID = db.OrderStatuses.FirstOrDefault(p => p.OrderStatusId == 7).OrderStatusId;
            if (statsID == 7)
            {
                salesCount = db.OrderDetails.FirstOrDefault(p => p.OrderDetailId == orderdetailID).Quantity;
            }
            //if (starCount = null)
            //{
            //    starCount = 0;
            //}
        }

    }*@
<vc:member-ui></vc:member-ui>
<h2 class="d-flex justify-content-center">按讚好物</h2>
<div class="row">
    <div class="col-1"></div>
    <div class="col-11 ">
        <div class="input-group mb-1">
            <input type="text" class="form-control input-text" placeholder="" aria-label="Recipient's username" aria-describedby="basic-addon2">
            <button class="btn btn-outline-warning btn-lg" type="button"><i>搜尋</i></button>
        </div>

        <div class="itembody">
            <div class="itembody-filter d-flex align-items-center justify-content-between">
                <div class="itembody-filter2 d-flex justify-content-start align-items-stretch">

                    <a class="itembody-filter2-btn linknoline SortOrder" id="SortOrder1">
                        全部商品
                        <input type="hidden" value="1" />
                    </a>

                    @*<a class="itembody-filter2-btn linknoline dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                        編輯
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <li>
                            <a class="dropdown-item" id="cancle">
                                <i></i>
                                取消按讚
                                <input type="hidden" value="6" />
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item SortOrder" id="SortOrder7">
                                <i></i>
                                無效商品
                                <input type="hidden" value="7" />
                            </a>
                        </li>
                    </ul>*@

                    <a class="itembody-filter2-btn linknoline SortOrder" id="SortOrder3">
                        熱銷商品
                        <input type="hidden" value="3" />
                    </a>

                    <a class="itembody-filter2-btn linknoline dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                        價格排序
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <li>
                            <a class="dropdown-item SortOrder" id="SortOrder4">
                                <i class="fa fa-arrow-down"></i>
                                價格：由高至低
                                <input type="hidden" value="4" />
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item SortOrder" id="SortOrder5">
                                <i class="fa fa-arrow-up"></i>
                                價格：由低至高
                                <input type="hidden" value="5" />
                            </a>
                        </li>
                    </ul>

                </div>

            </div>
        </div>
        <div class="itemcol" id="OriginShowItem">

            @{
                if (Model.MyLikeShowItem.Count>0)
                {

                    @await Component.InvokeAsync("MyLikeCategoryShow", new { shopProduct = Model.MyLikeShowItem });

                }
                else
                {
                    <div>
                        抱歉!您還沒有任何按讚商品
                    </div>
                }
            }

        </div>


        @*@{ foreach (var item in Model)
            {
                <input type="hidden" name="Memberid" value="@item.MemberID" id="@item.MemberID">

            }
        }
        <figure style="background-color:#FCFCFC">
            @{
                var count = 0;
                foreach (var pd in Model)
                {
                    count++;
                    string productLink = Url.Content("~/Item/Index") + "?id=" + pd.Product.ProductId;
                    <figcaption style="font-size:15px; color: #8E8E8E; "><a>@count</a>件商品</figcaption>
                    <div class="aaa d-flex flex-wrap">
                        @for (int i = 0; i < count; i++)
                        {
                            <div class="sellsitem">
                                <div>
                                    <a href="@productLink">
                                        @if (pd.Pic != null)
                                        {
                                            var base64Image = Convert.ToBase64String(pd.Pic);
                                            var source = String.Format("data:image/png;base64,{0}", base64Image);
                                            <img src="@source" class="cardImg" alt="..." />
                                        }
                                    </a>
                                </div>
                                <div class="px-1 d-flex flex-column justify-content-between">
                                    <div class="cardTitleBox">
                                        <div class="cardTitle">@pd.Product.ProductName</div>
                                    </div>
                                    @{ if (pd.Price.Count == 1)
                                        {
                                            <div class="cardPrice">$@decimal.Round(pd.Price[0])</div>

                                        }
                                        else
                                        {
                                            <div class="cardPrice">$@decimal.Round(pd.Price[0])-$@decimal.Round(pd.Price[1])</div>

                                        }
                                    }
                                    <div class="cardInfo d-flex justify-content-between flex-row">
                                        <div class="starBox mt-1">
                                            <div class="d-flex justify-content-start">
                                                <div class="starImg">
                                                    <img src="/img/YellowStar.png" alt="" class="me-1 d-block" />
                                                </div>
                                                <div class="text-black">@pd.starCount</div>
                                            </div>
                                        </div>
                                        <div class="text-end text-black-50 sells">已賣出<span>@pd.salesVolume</span></div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            }

        </figure>*@
    </div>
</div>

@section Scripts
{
    <script>
        let filter = [];
        let priceMin = 0;
        let priceMax = 999999999;

        let SortOrder = 1;
        let pages = 0;
        @*let BigtypeId = "@Model.SearchType.BigTypeId";*@
        //let sort1 = document.getElementById("SortOrder1");
        //let menu = document.getElementById("dropdownMenuLink");
        const cancle = document.querySelector("#cancle")

        cancle.addEventListener("click",function (event){
            let likeid = event.currentTarget.textContent;
            let div = $(this).closest(".dele");
            $.get(`@Url.Content("~/member/DeleteMylike")`), { id: likeid }, function (data) {
                if (data == "已取消收藏") {
                    div.remove()
                    alert("已取消收藏");
                }
                else {
                        window.location.href = '@Url.Content("~/Member/DeleteMylike")';
                    }
            }
        })




        $(".SortOrder").click(function (event) {

            let target = $(event.target);
            $(".active").removeClass("active");
            target.addClass("active");

            //if (this == $(".SortOrder")[3] || this == $(".SortOrder")[4]) {
            //    if (!menu.classList.contains("active")) {
            //        menu.classList.add("active");
            //    }
            //    menu.textContent = this.textContent.trim();
            //}
            //else {
            //    menu.textContent = "價格排序";
            //}

            SortOrder = target.find("input").val();
            CallgetJSON();
        });



        jQuery.postJSON = function (url, data, callback) {
            jQuery.post(url, data, callback, "json");
        };
        //$(".ordernavtabs").click(function (event) {
        //    tabid = $(event.currentTarget).siblings("input").val();
        //    $(event.currentTarget).addClass("active");
        //    $(event.currentTarget).parent().siblings().children("a").removeClass("active");
        //})
        function CallgetJSON() {
            $.postJSON(`/Member/AllLike`, {filter: filter, SortOrder: SortOrder, priceMin: priceMin, priceMax: priceMax }, function (data) {
                $("#OriginShowItem").html("");
                if (data.length > 0) {
                    $("#OriginShowItem").append(Items(data));
                }
                else {
                    $("#OriginShowItem").html("<div>暫待新增商品</div>");
                }
            })
        }

                function Items(data) {
            let item = "";
            for (let i = 0; i < data.length; i++) {
                let productLink = "@Url.Content("~/Item/Index")" + "?id=" + data[i].product.productId;
                item = item+  `<div class="sellsitem">
                           <a class="linknoline" href="${productLink}">`;
                if (data[i].pic != null)
                {

                    item = item + `<img src="data:image;base64,${data[i].pic}" class="cardImg" alt="..." />`;
                }
                else
                {
                    item = item +` <img src="#" class="cardImg" alt="此商品沒有圖片" />`
                }
                item = item + `</a><div class="px-1 d-flex flex-column justify-content-between" >
<div class="cardTitleBox">
                        <div class="cardTitle"> ${ data[i].product.productName}</div></div>`
                    if (data[i].price.Count == 1)
                    {
                        item = item + `<div class="cardPrice">${Math.round(data[i].price[0])}</div>`
                    }
                    else
                    {
                        item = item + `<div class="cardPrice">$`+`${Math.round(data[i].price[0])} - $`+`${Math.round(data[i].price[1])}</div>`
                    }

            item = item +
                `<div class="cardInfo d-flex justify-content-between flex-row">
                    <div class="starBox mt-1">
                        <div class="d-flex justify-content-start">
                            <div class="starImg">
                                <img src="/img/YellowStar.png" alt="" class="me-1 d-block" />
                            </div>
                            <div class="text-black">${data[i].starCount.toFixed(1)}</div>
                        </div>
                    </div>
                    <div class="text-end text-black-50 sells">已賣出<span>${data[i].salesVolume}</span></div>
                    
                </div>
            </div>
        </div>
    `}
            return item;
        }



    </script>
}
