
@{
    ViewData["Title"] = "FlashSales";
}


@section Styles{
    <link href="~/css/Event/Discount.css" rel="stylesheet" />
    <link href="~/css/Event/EventItemCard.css" rel="stylesheet" />
    <link href="~/css/ADitem.css" rel="stylesheet" />
    <link href="~/css/Event/EventProd.css" rel="stylesheet" />
}
<body>
    <div>
        <div class="w-100 event-header">
            @if (Model.Event.EventPic != null)
            {
                var base64Image = Convert.ToBase64String(Model.Event.EventPic);
                var source = String.Format("data:image/png;base64,{0}", base64Image);
                <img src="@source" alt="..." />
            }
        </div>
        <div id="eventDate"> 活動時間：@Model.Event.StartDate.ToString("yyyy/MM/dd") ～ @Model.Event.EndDate.ToString("yyyy/MM/dd")</div>
        @{
            if (DateTime.Now.CompareTo(Model.Event.EndDate) < 0)
            {

                <div class="split"></div>
                <div>
                    @if (Model.EventCoupons.Any())
                    {
                        <div class="coupongroup">
                            @foreach (var item in Model.EventCoupons)
                            {
                                @await Component.InvokeAsync("EventCoupon", new { showCoupon = item });
                            }
                        </div>
                    }
                </div>
                <div>
                    @if (Model.EventSubs.Any())
                    {
                        foreach (var Subs in Model.EventSubs)
                        {

                            @if (Subs.SubEventProducts.Any())
                            {
                                <div class="SubEventArea">
                                    <div class="SubEventTitle">@Subs.SubEvent.SubEventName</div>
                                    <div class="itemArea" id="itemArea">
                                        <div class="itemcol d-flex justify-content-center" id="itemcol">
                                            @await Component.InvokeAsync("EventItem", new { list = Subs.SubEventProducts })
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            }
            else
            {
                <div id="EventEndNoti">活動已結束</div>
            }
        }
    </div>
</body>

